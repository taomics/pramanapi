syntax = "proto3";

package taomics.praman.healthcheck;

option go_package = "github.com/taomics/pramanapi/healthcheck";

import "praman.proto";

message HealthCheckParameter {
  string name = 1;        // パラメータ名
  string unit = 2;        // パラメータの単位
  string description = 3; // パラメータの説明

  float current_value = 4;          // 最新の健診結果
  float predicted_value_1year = 5;  // 1年後の健診結果
  float predicted_value_3years = 6; // 3年後の健診結果

  HealthRisk risk = 7;     // パラメータのリスクレベル
  string caution_note = 8; // パラメータの注意事項
  repeated Recommendation recommendations = 9; // 優先して改善すべき問診項目

  // 基準値
  //
  // 基準値は基本的には一律に定まっていますが一部ユーザー毎に異なるためレスポンスに含めます。
  // また、基準値のリスクレベルはパラメータによって範囲と種類が異なります。例えば下限と上限に2つの「注意が必要」レベルの範囲があるものがある一方で、「特に注意が必要」レベルの範囲がないものがあります。
  repeated ReferenceRange reference_ranges = 10;

  uint32 fraction_digits = 11; // 有効な小数点以下の桁数

  enum HealthRisk {
    HEALTH_RISK_UNKNOWN = 0;
    HEALTH_RISK_LOW = 1;    // 現状維持
    HEALTH_RISK_MIDDLE = 2; // 注意が必要
    HEALTH_RISK_HIGH = 3;   // 特に注意が必要
  }

  message Recommendation {
    string subject = 1; // 問診名
    string content = 2; // 問診へのアドバイス
  }

  message ReferenceRange {
    HealthRisk risk = 1;            // リスクレベル
    taomics.praman.Range range = 2; // 範囲
  }
}

message HealthCheckUploadData {
  string issuer = 1;                  // 医療機関名
  string issuer_code = 2;             // 処方箋発行医療機関コード
  taomics.praman.Date issue_date = 3; // QRコード発行日
  repeated Result results = 4;        // 健康診断結果

  message Result {
    taomics.praman.Date date = 1; // 健康診断受信日
    string ver = 2;               // 健康診断データバージョン
    string data = 3;              // 健康診断データ
  }
}

message HealthCheckPredictionRequest {
  // 健診の日付。何も指定がなければ最新の結果を返します。
  taomics.praman.Date date = 1;
}

message HealthCheckPredictionResponse {
  // 健診日
  taomics.praman.Date date = 1;

  // 健診結果と予測
  // 最新の健診結果と1年後、3年後の健診結果を健康診断項目毎に返します。
  // 1年後の健診結果と3年後の値は、最新の健診結果から予測された値です。
  repeated HealthCheckParameter parameters = 2;
}

message UploadHealthCheckResultRequest { HealthCheckUploadData data = 1; }

message UploadHealthCheckResultResponse {}

// HealthCheckService
//
// Common Errors:
//   - INTERNAL (13): Server is something wrong.
//   - UNAUTHENTICATED (16): Authorization header is something wrong.
//   - PERMISSION_DENIED (7): The requester does not have a permission.
service HealthCheckService {
  // Predict health check result in the future.
  //
  // Errors:
  //   - NOT_FOUND (5): The health check data is not found.
  rpc PredictHealthCheck(HealthCheckPredictionRequest)
      returns (HealthCheckPredictionResponse);

  // Upload health check result.
  //
  // Errors:
  //   - INVALID_ARGUMENT (3): The upload data is invalid.
  //   - FAILED_PRECONDITION (9): The upload data is not acceptable.
  //   - ALREADY_EXISTS (6): The health check data is already exists.
  rpc UploadHealthCheckResult(UploadHealthCheckResultRequest)
      returns (UploadHealthCheckResultResponse);
}
