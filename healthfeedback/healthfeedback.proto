syntax = "proto3";

package taomics.praman.healthfeedback;

option go_package = "github.com/taomics/pramanapi/healthfeedback";

import "praman.proto";

enum Rating {
  UNRATED = 0;
  LIKE = 1;    // 好き
  DISLIKE = 2; // 嫌い
}

message HealthFeedback {
  string id = 1;
  taomics.praman.HealthMode mode = 2;
  taomics.praman.Date date = 3;
  string text = 4;
  Rating rating = 5;
}

message GetHealthFeedbackRequest {}

message GetHealthFeedbackResponse {
  // health_feedback will be null if threre is no feedback and the new health feedback is generating.
  HealthFeedback health_feedback = 1;
  // generating is true if the new health feedback is generating.
  bool generating = 2;
}

message RateHealthFeedbackRequest {
  string health_feedback_id = 1;
  Rating rating = 2;
}

message SetHealthModeRequest {
  taomics.praman.HealthMode mode = 1;
}

// HealthFeedbackService
//
// Common Errors:
//   - INTERNAL (13): Server is something wrong.
//   - UNAUTHENTICATED (16): Authorization header is something wrong.
//   - PERMISSION_DENIED (7): User is not authorized.
service HealthFeedbackService {
  // GetHealthFeedback
  //
  // Errors:
  //   - NOT_FOUND (5): there is no feedback.
  //   - FAILED_PRECONDITION (9): health mode is not set.
  rpc GetHealthFeedback(GetHealthFeedbackRequest)
      returns (GetHealthFeedbackResponse);

  // RateHealthFeedback
  //
  // Errors:
  //   - INVALID_ARGUMENT (3): id is invalid, or rating is UNRATED.
  rpc RateHealthFeedback(RateHealthFeedbackRequest)
      returns (taomics.praman.Empty);

  // SetHealthMode
  //
  // Errors:
  //   - INVALID_ARGUMENT (3): mode is missing.
  rpc SetHealthMode(SetHealthModeRequest)
      returns (taomics.praman.Empty);
}
